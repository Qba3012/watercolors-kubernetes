apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "1000m"
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: watercolors
    meta.helm.sh/release-namespace: default
  creationTimestamp: "2020-10-10T19:28:02Z"
  generation: 2
  labels:
    app: nginx-ingress
    app.kubernetes.io/component: controller
    app.kubernetes.io/managed-by: Helm
    chart: nginx-ingress-1.41.3
    heritage: Helm
    release: watercolors
  name: watercolors-nginx-ingress-controller
  namespace: default
  resourceVersion: "10252366"
  selfLink: /apis/apps/v1/namespaces/default/deployments/watercolors-nginx-ingress-controller
  uid: f6dd83e4-d836-4ade-a565-453a08d30ec8
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx-ingress
      release: watercolors
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx-ingress
        app.kubernetes.io/component: controller
        component: controller
        release: watercolors
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --default-backend-service=default/watercolors-nginx-ingress-default-backend
        - --election-id=ingress-controller-leader
        - --ingress-class=nginx
        - --configmap=default/watercolors-nginx-ingress-controller
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef: 
            name: nginx-config
        image: us.gcr.io/k8s-artifacts-prod/ingress-nginx/controller:v0.34.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: nginx-ingress-controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 101
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: watercolors-nginx-ingress
      serviceAccountName: watercolors-nginx-ingress
      terminationGracePeriodSeconds: 60
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2020-10-10T19:28:28Z"
    lastUpdateTime: "2020-10-10T19:28:28Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2020-10-10T19:28:02Z"
    lastUpdateTime: "2020-10-10T19:28:28Z"
    message: ReplicaSet "watercolors-nginx-ingress-controller-84d49d644d" has successfully
      progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1